source('C:/Users/user/DataScience/titanic/desicion_tree.R')
getwd()
setwd("../DataScience/titanic/")
source('C:/Users/user/DataScience/titanic/desicion_tree.R')
source('C:/Users/user/DataScience/titanic/desicion_tree.R')
source('C:/Users/user/DataScience/titanic/desicion_tree.R')
source('C:/Users/user/DataScience/titanic/desicion_tree.R')
source('C:/Users/user/DataScience/titanic/desicion_tree.R')
source('C:/Users/user/DataScience/titanic/desicion_tree.R')
train
head(train)
head(train)
train$Conj <- 0
train$Conj[train$Age >= 18] <- train$SibSp[train$Age >= 18]
any(is.na(train$Age))
is.na(train$Age)
train$Conj[!is.na(train$Age) AND train$Age >= 18] <- train$SibSp[!is.na(train$Age) AND train$Age >= 18]
train$Conj[is.na(train$Age) == FALSE AND train$Age >= 18] <- train$SibSp[is.na(train$Age) == FALSE AND train$Age >= 18]
train$Conj[is.na(train$Age) == FALSE & train$Age >= 18] <- train$SibSp[is.na(train$Age) == FALSE & train$Age >= 18]
source('C:/Users/user/DataScience/titanic/desicion_tree.R')
source('C:/Users/user/DataScience/titanic/desicion_tree.R')
View(result)
source('C:/Users/user/DataScience/titanic/desicion_tree.R')
source('C:/Users/user/DataScience/titanic/desicion_tree.R')
train$Conj <- 0
getwd()
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
train$Conj <- 0
train$Conj[is.na(train$Age) == FALSE & train$Age >= 18] <- train$SibSp[is.na(train$Age) == FALSE & train$Age >= 18]
test$Conj <- 0
test$Conj[is.na(test$Age) == FALSE & test$Age >= 18] <- test$SibSp[is.na(test$Age) == FALSE & test$Age >= 18]
tree <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Conj + Parch + Fare, data = train, method = "class")
fancyRpartPlot(tree, cex=0.7)
result <- predict(tree, test, type="class")
my_solution <- data.frame(PassengerId = test$PassengerId, Survived = my_prediction)
write.csv(my_solution, file = "my_solution.csv", row.names = FALSE)
source('C:/Users/user/DataScience/titanic/desicion_tree.R')
source('C:/Users/user/DataScience/titanic/neural_net.R')
source('C:/Users/user/DataScience/titanic/neural_net.R')
plot(nn)
apply(data,2,function(x) sum(is.na(x)))
tree <- rpart(Age ~ Suvived + Pclass + Sex + SibSp + Conj + Parch + Fare, data = train)
tree <- rpart(Age ~ Survived + Pclass + Sex + SibSp + Conj + Parch + Fare, data = train)
ages <- predict(tree, train)
data2 <- data
data2$Age[is.na(data2$Age)] <- ages[is.na(data2$Age)]
apply(data,2,function(x) sum(is.na(x)))
apply(data2,2,function(x) sum(is.na(x)))
View(data)
View(data2)
data3 <- data2
maxs <- apply(data3, 2, max)
mins <- apply(data3, 2, min)
scaled <- as.data.frame(scale(data3, center = mins, scale = maxs - mins))
str(min)
str(mins)
str(data3)
str(maxs)
scaled <- as.data.frame(scale(data3, center = mins, scale = maxs - mins))
row.names(data3)
scaled <- as.data.frame(scale(as.numeric(data3), center = mins, scale = maxs - mins))
scaled <- as.data.frame(scale(as.matrix(data3), center = mins, scale = maxs - mins))
str(as.matrix(data3))
View(as.matrix(data3))
View(maxs)
str(data3)
save(data2, "train_age.csv")
save("train_age.csv", data2)
save(data2, file = "train_age.csv")
data <- read.csv("train_age.csv")
data <- load("train_age.csv")
apply(data,2,function(x) sum(is.na(x)))
View(data)
help("write.csv")
write.csv(data3, file="train_age.csv")
data <- read.csv("train_age.csv")
apply(data,2,function(x) sum(is.na(x)))
data <- apply(data, 2, as.numeric)
View(data)
data <- read.csv("train_age.csv")
data <- apply(data, 2, function(x) as.numeric(levels(x)))
View(data)
data <- read.csv("train_age.csv")
data_num <- as.matrix(sapply(data, as.numeric))
View(data_num)
data_num <- data_num[,c(2:15)]
data_num <- data_num[,c(2:14)]
data <- data_num
maxs <- apply(data, 2, max)
mins <- apply(data, 2, min)
View(maxs)
scaled <- as.data.frame(scale(data, center = mins, scale = maxs - mins))
train_ <- scaled[index,]
test_ <- scaled[-index,]
index <- sample(1:nrow(data),round(0.75*nrow(data)))
train_ <- scaled[index,]
test_ <- scaled[-index,]
f <- as.formula(paste("Survived ~", paste(n[!n %in% c("Survived", "Embarked", "Name", "X")], collapse = " + ")))
library(neuralnet)
n <- names(train_)
install.packages("neuralnet")
install.packages("neuralnet")
library(neuralnet)
n <- names(train_)
f <- as.formula(paste("Survived ~", paste(n[!n %in% c("Survived", "Embarked", "Name", "X")], collapse = " + ")))
nn <- neuralnet(f,data=train_,hidden=c(5,3),linear.output=T)
plot(nn)
pr.nn <- compute(nn,test_[,!c("Survived", "Embarked", "Name", "X")])
pr.nn <- compute(nn,test_[,!names(test_) %in% c("Survived", "Embarked", "Name", "X")])
View(pr.nn)
pr.nn <- compute(nn,test_[,!col.names(test_) %in% c("Survived", "Embarked", "Name", "X")])
pr.nn <- compute(nn,test_[,!names(test_) %in% c("Survived", "Embarked", "Name", "X")])
pr.nn_ <- pr.nn$net.result*(max(data$Survived)-min(data$Survived))+min(data$Survived)
View(data)
pr.nn_ <- pr.nn$net.result*(max(data[,3])-min(data[,3]))+min(data[,3])
View(pr.nn_)
View(pr.nn)
test_$Survived
test_$nn <- 0
test_$nn <- pr.nn$net.result > 0.5
table(test_$Survived, test_$nn)
prop.table(table(test_$Survived, test_$nn))
0.52017937220 + 0.27354260090
savehistory("C:/Users/user/DataScience/titanic/History.RData")
save.image("C:/Users/user/DataScience/titanic/Environment.RData")
data <- read.csv("train.csv")
str(data)
train_tree <- data[!is.na(data$Age), !names(data) %in% c("PassengerId", "Name", "Ticket", "Embarked") ]
View(train_tree)
train_tree <- data[!is.na(data$Age), !names(data) %in% c("PassengerId", "Name", "Ticket", "Embarked", "Cabin") ]
tree <- rpart(Age ~ Suvived + Pclass + Sex + SibSp + Parch + Fare, data = train_tree, method = "class")
tree <- rpart(Age ~ Survived + Pclass + Sex + SibSp + Parch + Fare, data = train_tree, method = "class")
no_ages <- data[is.na(data$Age), !names(data) %in% c("PassengerId", "Name", "Ticket", "Embarked", "Cabin") ]
ages <- predict(tree, no_ages)
View(ages)
View(no_ages)
no_ages <- data[is.na(data$Age), !names(data) %in% c("PassengerId", "Name", "Ticket", "Embarked", "Cabin", "Age") ]
ages <- predict(tree, no_ages)
View(ages)
tree <- rpart(Age ~ Survived + Pclass + Sex + SibSp + Parch + Fare, data = train_tree, method = "anova")
ages <- predict(tree, no_ages)
ages
str(no_ages)
data$Age[is.na(data$Age)] <- ages
View(data[names(ages),])
source('C:/Users/user/DataScience/titanic/neural_net.R')
source('C:/Users/user/DataScience/titanic/neural_net.R')
source('C:/Users/user/DataScience/titanic/neural_net.R')
source('C:/Users/user/DataScience/titanic/neural_net.R')
source('C:/Users/user/DataScience/titanic/neural_net.R')
View(train_)
f
source('C:/Users/user/DataScience/titanic/neural_net.R')
source('C:/Users/user/DataScience/titanic/neural_net.R')
source('C:/Users/user/DataScience/titanic/neural_net.R')
source('C:/Users/user/DataScience/titanic/neural_net.R')
source('C:/Users/user/DataScience/titanic/neural_net.R')
install.packages("e1071")
source('C:/Users/user/DataScience/titanic/neural_net.R')
View(svm.pred)
table(pred = svm.pred, true = test_[,2])
svm.pred
test_$Survived
min(svm.pred)
max(svm.pred)
x <- scale(svm.pred, center=min(svm.pred), scale = max(svm.pred)-min(svm.pred))
table(pred = x < 0.5, true = test_[,2])
str(x)
str(test_[,2])
table(pred = x[,1] < 0.5, true = test_[,2])
table(pred = x[,1] < 0.5, true = test_[,2])
prop.table(table(pred = x[,1] < 0.5, true = test_[,2]))
source('C:/Users/user/DataScience/titanic/neural_net.R')
savehistory("C:/Users/user/DataScience/titanic/History.RData")
